import*as e from"three";import*as a from"pixy";import t from"three/addons/capabilities/WebGL.js";import i from"three/addons/libs/stats.module.js";import{GUI as n}from"three/addons/libs/lil-gui.module.min.js";import{CopyShader as s}from"three/addons/shaders/CopyShader.js";import{OrbitControls as l}from"three/addons/controls/OrbitControls.js";!1===t.isWebGLAvailable()&&document.body.appendChild(t.getWebGLErrorMessage());const r={mouse:new e.Vector2(.5,.5),canvas:void 0,camera:void 0,dummyCamera:void 0,controls:void 0,scene:void 0,renderer:void 0,noise:{scene:void 0,sphere:void 0,uniforms:void 0,material:void 0,texture:void 0},grungeTexture:void 0,gui:{root:void 0,tiling:void 0,tone:void 0,normalMap:void 0,cb:void 0,pars:void 0,parsItems:void 0},stats:void 0,clock:new e.Clock,effectController:void 0,layers:[],spriteSheet:{},alphaOptions:{},shaderDefines:void 0,preventSave:!1,init(){this.initGraphics(),this.initScene(),this.setupGui(),this.initLayers(),console.log("[fxgen] initialized")},initGraphics(){console.log("[fxgen] initializing graphics..."),
//! RENDERER
this.renderer=new e.WebGLRenderer,this.renderer.setSize(512,512),this.renderer.capabilities.isWebGL2&&console.log("[fxgen] WebGL2"),this.canvas=this.renderer.domElement,this.canvas.addEventListener("mousemove",(e=>{this.mouse.x=e.offsetX/this.canvas.width,this.mouse.y=e.offsetY/this.canvas.height})),document.body.appendChild(this.canvas),this.alphaCanvas=document.createElement("canvas"),this.alphaCanvas.style.display="none",document.body.appendChild(this.alphaCanvas),this.saveCanvas=document.createElement("canvas"),this.blur50=document.createElement("canvas"),this.blur25=document.createElement("canvas"),
//! STATS
this.stats=new i,document.body.appendChild(this.stats.dom)},initScene(){
//! TEXTUERS
//! MATERIALS
//! MODELS
let t,i,n;console.log("[fxgen] initializing scene..."),this.scene=new e.Scene,this.noise.scene=new e.Scene,
//! CAMERA
this.camera=new e.PerspectiveCamera(45,1,1,1e3),this.camera.position.set(0,0,3.8),this.dummyCamera=new e.Camera,
//! CONTROLS
this.controls=new l(this.camera,this.renderer.domElement),this.controls.target.set(0,0,0),this.controls.addEventListener("change",this.render.bind(this)),t=new e.PlaneGeometry(2,2),i=new e.Mesh(t,new e.MeshBasicMaterial),this.scene.add(i),
//! TEXTUER MAP
this.grungeTexture=(new e.TextureLoader).load("images/grunge.png"),this.grungeTexture.wrapS=this.grungeTexture.wrapT=e.RepeatWrapping,this.grungeTexture.minFilter=e.LinearFilter,this.grungeTexture.magFilter=e.LinearFilter,this.grungeTexture.anisotropy=16,t=new e.SphereGeometry(1,1024,1024),n=new a.FxgenShader,n.enable("DISPLACEMENT"),n.enable("GLSL3"),this.noise.uniforms=n.generateUniforms(),this.noise.material=n.createStandardMaterial(this.noise.uniforms),this.noise.sphere=new e.Mesh(t,this.noise.material),this.noise.scene.add(this.noise.sphere),
//! LAYERS
n=new a.FxgenShader,this.shaderDefines=n.generateDefines(),this.spriteSheet.uniforms=e.UniformsUtils.clone(s.uniforms),this.spriteSheet.material=new e.ShaderMaterial({uniforms:this.spriteSheet.uniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,depthTest:!1,depthWrite:!1}),this.spriteSheet.uniforms.opacity.value=1,this.spriteSheet.camera=new e.OrthographicCamera(-1,1,1,-1,0,1),this.spriteSheet.scene=new e.Scene,this.spriteSheet.quad=new e.Mesh(new e.PlaneGeometry(2,2),this.spriteSheet.material),this.spriteSheet.dimension=8,this.spriteSheet.time=0,this.spriteSheet.timeLength=3,this.spriteSheet.timeStep=.1,this.spriteSheet.scene.add(this.spriteSheet.quad)},initLayers(){console.log("[fxgen] initializing layers..."),this.layers=[];let t={name:"Base"};t.renderTarget=new e.WebGLRenderTarget(this.canvas.width,this.canvas.height,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,stencilBuffer:!1});let i=new a.FxgenShader,n=this.effectController.type;i.enable(n.toUpperCase()),i.enable("TOON"),i.enable("GLSL3"),t.uniforms=i.generateUniforms(),t.material=i.createMaterial(t.uniforms),t.material.defines=this.shaderDefines,this.resetParameters(t.uniforms),this.layers.push(t),
//! POLAR CONVERSION
t={},t.name="PolarConversion",t.tDiffuse=this.layers[this.layers.length-1].renderTarget.texture,t.renderTarget=new e.WebGLRenderTarget(this.canvas.width,this.canvas.height,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,stencilBuffer:!1}),i.clear(),i.enable("POLARCONVERSION"),t.uniforms=i.generateUniforms(),t.material=i.createMaterial(t.uniforms),t.material.defines=this.shaderDefines,this.layers.push(t),
//! COLOR BALANCE
t={},t.name="ColorBalance",t.tDiffuse=this.layers[this.layers.length-1].renderTarget.texture,t.renderTarget=new e.WebGLRenderTarget(this.canvas.width,this.canvas.height,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,stencilBuffer:!1}),i.clear(),i.enable("COLORBALANCE"),t.uniforms=i.generateUniforms(),t.material=i.createMaterial(t.uniforms),t.material.defines=this.shaderDefines,this.layers.push(t),
//! TILING
t={},t.name="Tiling",t.tDiffuse=this.layers[this.layers.length-1].renderTarget.texture,t.tDiffuse.wrapS=t.tDiffuse.wrapT=e.RepeatWrapping,t.renderTarget=new e.WebGLRenderTarget(this.canvas.width,this.canvas.height,{minFilter:e.NearestFilter,magFilter:e.NearestFilter,stencilBuffer:!1}),i.clear(),i.enable("TILING"),t.uniforms=i.generateUniforms(),t.material=i.createMaterial(t.uniforms),t.material.defines=this.shaderDefines,this.layers.push(t),
//! NORMAL MAP
t={},t.name="NormalMap",t.tDiffuse=this.layers[this.layers.length-1].renderTarget.texture,t.renderTarget=new e.WebGLRenderTarget(this.canvas.width,this.canvas.height,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,stencilBuffer:!1}),i.clear(),i.enable("HEIGHT2NORMALSOBEL"),t.uniforms=i.generateUniforms(),t.material=i.createMaterial(t.uniforms),t.material.defines=this.shaderDefines,this.layers.push(t),
//! COPY
t={},t.name="Copy",t.tDiffuse=this.layers[this.layers.length-1].renderTarget.texture,t.renderTarget=null,i.clear(),i.enable("COPY"),t.uniforms=i.generateUniforms(),t.material=i.createMaterial(t.uniforms),t.material.defines=this.shaderDefines,this.layers.push(t),this.spriteSheet.renderTarget=new e.WebGLRenderTarget(this.canvas.width,this.canvas.height,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,stencilBuffer:!1})},setupGui(){let e;console.log("[fxgen] setup GUI..."),this.fileInput=document.createElement("input"),this.fileInput.type="file",this.fileInput.addEventListener("change",(e=>{let t=new FileReader;t.addEventListener("load",(e=>{let t=e.target.result,i=JSON.parse(t);this.canvas.width=i.resolution,this.canvas.height=i.resolution,c();let n=new a.FxgenShader;n.enable(i.type.toUpperCase()),n.enable("TOON"),n.enable("GLSL3"),this.layers[0].uniforms=n.generateUniforms(),this.layers[0].material=n.createMaterial(this.layers[0].uniforms,{defines:n.generateDefines()}),this.effectController.type=i.type,this.resetParameters(this.layers[0].uniforms);for(let e in i)this.effectController[e]=i[e];for(let e in this.gui.root.controllers)this.gui.root.controllers[e].updateDisplay();for(let e in this.gui.pars.controllers)this.gui.pars.controllers[e].updateDisplay();for(let e in this.gui.tone.controllers)this.gui.tone.controllers[e].updateDisplay();for(let e in this.gui.tiling.controllers)this.gui.tiling.controllers[e].updateDisplay();for(let e in this.gui.normalMap.controllers)this.gui.normalMap.controllers[e].updateDisplay();for(let e in this.gui.cb.controllers)this.gui.cb.controllers[e].updateDisplay()}),!1),t.readAsText(this.fileInput.files[0])})),this.fileInput.addEventListener("click",(e=>{this.value=null})),this.effectController={animate:!1,time:0,resolution:"512",polarConversion:!1,cHeightScale:2,normalMap:!1,tiling:!1,cRadialMask:1,cFrequency:30,cAmplitude:.01,cIntensity:.5,cDirectionX:0,cDirectionY:1,cPowerExponent:1,cRadius:1,cInnerRadius:1,cInnerRadius2:1,cSize:1,cWidth:1,cHeight:1,cDepth:1,cColor:1,cRadius:.5,cPetals:6,cOffset:.2,cVolume:3,cBeta:4,cDelta:.05,cScale:1,cInnerWidth:.4,cStrength:1,cPower:1,cRange:2,cEmission:1,cBloom:1,cLightX:1,cLightY:1,cLightZ:1,cAmbient:1,cSmoothness:1,cSmoothnessPower:1,cThickness:1,cThicknessPower:1,cCameraTilt:0,cCameraPan:0,cSpeed:1,cAngle:0,cDensity:1,cAlpha:1,cDiamondGearTeeth:18,cDiamondGearMid:.8,cBrushStrokeX1:-.4,cBrushStrokeY1:0,cBrushStrokeX2:1.1,cBrushStrokeY2:.8,cBubblesVariation:1,cFlameEyeInnerFade:1,cFlameEyeOuterFade:1,cFlameEyeBorder:1,cSplatLines:20,cSplatSpotStep:.04,cTrabeculumVariation:2,cLifeTime:.9,cGravity:.26,cCount:300,cToonEnable:!1,cToonDark:.8,cToonLight:.95,cExplosionRadius:1.75,cExplosionDownScale:1.25,cExplosionGrain:2,cExplosionSpeed:.3,cExplosionBallness:2,cExplosionGrowth:2.2,cExplosionFade:1.6,cExplosionDensity:1.35,cExplosionContrast:1,cExplosionRollingInitDamp:.3,cExplosionRollingSpeed:2,cExplosionDelayRange:.25,cExplosionBallSpread:1,cExplosionBloom:0,cExplosionEmission:.2,cExplosionColor:1,cNoiseOctave:8,cNoiseFrequency:1,cNoiseAmplitude:.65,cNoisePersistence:.5,cNoiseScale:1,cNoiseSphereEnable:!1,cNoiseGraphEnable:!1,cNoiseStrength:1,cNoiseDepth:3,cNoiseSize:8,cColorBalanceShadowsR:0,cColorBalanceShadowsG:0,cColorBalanceShadowsB:0,cColorBalanceMidtonesR:0,cColorBalanceMidtonesG:0,cColorBalanceMidtonesB:0,cColorBalanceHighlightsR:0,cColorBalanceHighlightsG:0,cColorBalanceHighlightsB:0,type:"Wood"},this.gui.root=new n,this.gui.root.add(this,"load"),this.gui.root.add(this,"save"),e=this.gui.root,e.add(this.effectController,"resolution",["8","16","32","64","128","256","512","1024","2048"]).onChange((e=>{this.canvas.width=e,this.canvas.height=e,c()})),e.add(this.effectController,"type",["Wood","Circle","Solar","Corona","Spark","Ring","Gradation","GradationLine","Flash","Cone","Flower","FlowerFun","WaveRing","Smoke","Flame","FlameEye","Fire","Cell","Lightning","Flare","Flare2","Flare3","LensFlare","Sun","MagicCircle","Mandara","Explosion","Explosion2","Cross","Laser","Laser2","Light","Cloud","Cloud2","PerlinNoise","SeemlessNoise","BooleanNoise","CellNoise","TurbulentNoise","FbmNoise","FbmNoise2","FbmNoise3","RandomNoise","VoronoiNoise","SparkNoise","MarbleNoise","TessNoise","GradientNoise","Checker","FlameLance","Bonfire","Snow","DiamondGear","BrushStroke","Speckle","Bubbles","Pentagon","Grunge","Energy","InkSplat","Particle","Electric","Caustics","Squiggles","WaterTurbulence","Trabeculum","BinaryMatrix"]).onChange((e=>{const t=new a.FxgenShader;t.enable(e.toUpperCase()),t.enable("TOON"),t.enable("GLSL3"),this.layers[0].uniforms=t.generateUniforms(),this.layers[0].material=t.createMaterial(this.layers[0].uniforms),this.layers[0].material.defines=t.generateDefines(),this.resetParameters(this.layers[0].uniforms)})),this.gui.root.add(this.effectController,"time",0,100),this.gui.root.add(this.effectController,"animate"),this.gui.pars=this.gui.root.addFolder("Parameters"),this.gui.parsItems=[],this.gui.root.add(this.effectController,"polarConversion"),e=this.gui.root.addFolder("Toon"),e.add(this.effectController,"cToonEnable").name("enable"),e.add(this.effectController,"cToonDark",0,1).name("dark"),e.add(this.effectController,"cToonLight",0,1).name("light"),e.open(!1),this.gui.tone=e,e=this.gui.root.addFolder("Tiling"),e.add(this.effectController,"tiling").name("enable"),e.add(this.effectController,"cRadialMask",0,1).name("radial mask"),e.open(!1),this.gui.tiling=e,e=this.gui.root.addFolder("NormalMap"),e.add(this.effectController,"normalMap").name("Generate"),e.add(this.effectController,"cHeightScale",0,10),e.open(!1),this.gui.normalMap=e,e=this.gui.root.addFolder("ColorBalance"),e.add(this.effectController,"cColorBalanceShadowsR",-1,1,.025).name("Shadows-R"),e.add(this.effectController,"cColorBalanceShadowsG",-1,1,.025).name("Shadows-G"),e.add(this.effectController,"cColorBalanceShadowsB",-1,1,.025).name("Shadows-B"),e.add(this.effectController,"cColorBalanceMidtonesR",-1,1,.025).name("Midtones-R"),e.add(this.effectController,"cColorBalanceMidtonesG",-1,1,.025).name("Midtones-G"),e.add(this.effectController,"cColorBalanceMidtonesB",-1,1,.025).name("Midtones-B"),e.add(this.effectController,"cColorBalanceHighlightsR",-1,1,.025).name("Highlights-R"),e.add(this.effectController,"cColorBalanceHighlightsG",-1,1,.025).name("Highlights-G"),e.add(this.effectController,"cColorBalanceHighlightsB",-1,1,.025).name("Highlights-B"),e.add(this,"resetColorBalance"),e.open(!1),this.gui.cb=e,e=this.gui.root.addFolder("SpriteSheet"),e.add(this.spriteSheet,"dimension",2,32).step(1),e.add(this.spriteSheet,"time",0,1e3),e.add(this.spriteSheet,"timeLength",.1,1e3),e.add(this.spriteSheet,"timeStep",1e-4,100),e.add(this,"saveSpriteSheet").name("Save (SpriteSheet)"),e.add(this,"saveSpriteSheetPng").name("Save (SpriteSheet with alpha)"),e.add(this,"downloadSpriteSheetPng").name("Download (SpriteSheet with alpha)"),e.open(!1),this.alphaOptions.threshold=0,this.alphaOptions.tolerance=1,this.alphaOptions.blur=0,this.alphaOptions.visible=!1,this.alphaOptions.update=!1,e=this.gui.root.addFolder("Image with alpha (PNG)"),e.add(this.alphaOptions,"threshold",0,1).onChange((e=>{this.alphaOptions.update=!0})),e.add(this.alphaOptions,"tolerance",0,1).onChange((e=>{this.alphaOptions.update=!0})),e.add(this.alphaOptions,"blur",0,10,1).onChange((e=>{this.alphaOptions.update=!0})),e.add(this.alphaOptions,"visible").onChange((e=>{e?(this.canvas.style.display="none",this.alphaCanvas.style.display=null,this.alphaOptions.update=!0):(this.canvas.style.display=null,this.alphaCanvas.style.display="none")})),e.add(this,"savePng").name("Save (PNG)"),e.add(this,"downloadPng").name("Download (PNG)"),e.open(!1),this.gui.root.add(this,"saveImage").name("Save")},saveImage(){this.render();let e=this.canvas.toDataURL();window.open("about:blank").document.write("<img src='"+e+"'/>")},savePng(){this.render(),this.updateSaveBuffer(),this.saveCanvas.toBlob((async function(e){const a=await window.showSaveFilePicker({types:[{description:"Images",accept:{"image/png":[".png"]}}],suggestedName:"image.png"}),t=await a.createWritable();await t.write(e),await t.close()}))},downloadPng(){this.render(),this.updateSaveBuffer(),this.saveCanvas.toBlob((e=>{const a=document.createElement("a");a.href=window.URL.createObjectURL(e),a.download="image.png",a.click()}))},saveSpriteSheet(){let e=Math.floor(this.canvas.width/this.spriteSheet.dimension)/this.canvas.width,a=this.spriteSheet.time;this.renderer.setRenderTarget(this.spriteSheet.renderTarget),this.renderer.clear(),this.renderer.setRenderTarget(null);for(let t=0;t<this.spriteSheet.dimension;t++)for(let i=0;i<this.spriteSheet.dimension;i++){let n=this.spriteSheet.timeStep*this.spriteSheet.dimension*t+this.spriteSheet.timeStep*i;if(n>=this.spriteSheet.timeLength)break;this.effectController.time=a+n,this.render(),this.spriteSheet.uniforms.tDiffuse.value=this.layers[this.layers.length-2].renderTarget.texture,this.spriteSheet.quad.scale.set(e,e,1),this.spriteSheet.quad.position.set(2*e*i-1+e,1-2*e*t-e,0),this.renderer.autoClear=!1,this.renderer.setRenderTarget(this.spriteSheet.renderTarget),this.renderer.render(this.spriteSheet.scene,this.spriteSheet.camera),this.renderer.setRenderTarget(null),this.renderer.autoClear=!0}if(this.spriteSheet.quad.scale.set(1,1,1),this.spriteSheet.quad.position.set(0,0,0),this.spriteSheet.uniforms.tDiffuse.value=this.spriteSheet.renderTarget.texture,this.renderer.render(this.spriteSheet.scene,this.spriteSheet.camera),this.effectController.time=a,!this.preventSave){let e=this.canvas.toDataURL();window.open("about:blank").document.write("<img src='"+e+"'/>")}},saveSpriteSheetPng(){this.preventSave=!0,this.saveSpriteSheet(),this.preventSave=!1,this.updateSaveBuffer(),this.saveCanvas.toBlob((async function(e){const a=await window.showSaveFilePicker({types:[{description:"Images",accept:{"image/png":[".png"]}}],suggestedName:"image.png"}),t=await a.createWritable();await t.write(e),await t.close()}))},downloadSpriteSheetPng(){this.preventSave=!0,this.saveSpriteSheet(),this.preventSave=!1,this.updateSaveBuffer(),this.saveCanvas.toBlob((e=>{const a=document.createElement("a");a.href=window.URL.createObjectURL(e),a.download="image.png",a.click()}))},resetColorBalance(){this.effectController.cColorBalanceShadowsR=0,this.effectController.cColorBalanceShadowsG=0,this.effectController.cColorBalanceShadowsB=0,this.effectController.cColorBalanceMidtonesR=0,this.effectController.cColorBalanceMidtonesG=0,this.effectController.cColorBalanceMidtonesB=0,this.effectController.cColorBalanceHighlightsR=0,this.effectController.cColorBalanceHighlightsG=0,this.effectController.cColorBalanceHighlightsB=0;for(let e in this.gui.cb.controllers)this.gui.cb.controllers[e].updateDisplay()},load(){this.fileInput.click()},save(){let e;try{e=JSON.stringify(this.effectController,null,"\t"),e=e.replace(/[\n\t]+([\d\.e\-\[\]]+)/g,"$1")}catch(a){e=JSON.stringify(this.effectController)}var a;a="EffectTextureMaker_Untitled.json",function(e,a){o.href=URL.createObjectURL(e),o.download=a||"data.json",o.click()}(new Blob([e],{type:"text/plain"}),a)},resetParameters(e){for(let e in this.gui.parsItems)this.gui.parsItems[e].destroy();this.gui.parsItems=[];for(let a in e){if("resolution"===a||"mouse"===a||"time"===a||"cameraPos"===a||"cameraDir"===a||"tDiffuse"===a||0===a.indexOf("toon")||a.indexOf("Enable")>=0)continue;const t=Object.keys(this.effectController);for(let a of t)a in e&&(this.effectController[a]=e[a].value)}let a={cFrequency:{minValue:0,maxValue:50,name:"Frequency"},cPowerExponent:{minValue:0,maxValue:5,name:"PowerExponent"},cAmplitude:{minValue:0,maxValue:.2,name:"Amplitude"},cIntensity:{minValue:0,maxValue:1,name:"Intensity",step:.01},cDirectionX:{minValue:-1,maxValue:1,name:"Direction X",step:.1},cDirectionY:{minValue:-1,maxValue:1,name:"Direction Y",step:.1},cRadius:{minValue:0,maxValue:2,name:"Radius",step:.01},cInnerRadius:{minValue:0,maxValue:2,name:"InnerRadius"},cInnerRadius2:{minValue:0,maxValue:2,name:"InnerRadius2"},cWidth:{minValue:0,maxValue:1,name:"Width",step:.01},cHeight:{minValue:0,maxValue:1,name:"Height"},cDepth:{minValue:0,maxValue:1,name:"Depth"},cOffset:{minValue:0,maxValue:1,name:"Offset",step:.1},cPetals:{minValue:1,maxValue:20,name:"Petals"},cVolume:{minValue:1,maxValue:10,name:"Volume"},cBeta:{minValue:1,maxValue:10,name:"Beta"},cDelta:{minValue:.01,maxValue:.2,name:"Delta"},cScale:{minValue:.1,maxValue:1,name:"Scale"},cSize:{minValue:.1,maxValue:5,name:"Size"},cColor:{minValue:0,maxValue:1,name:"Color",step:.1},cInnerWidth:{minValue:0,maxValue:1,name:"Inner Width"},cStrength:{minValue:0,maxValue:5,name:"Strength"},cPower:{minValue:0,maxValue:1,name:"Power"},cRange:{minValue:0,maxValue:5,name:"Range"},cEmission:{minValue:0,maxValue:1,name:"Emission"},cBloom:{minValue:0,maxValue:1,name:"Bloom",step:.1},cLightX:{minValue:-1,maxValue:1,name:"Light X",step:.01},cLightY:{minValue:-1,maxValue:1,name:"Light Y",step:.01},cLightZ:{minValue:-1,maxValue:1,name:"Light Z",step:.01},cAmbient:{minValue:0,maxValue:1,name:"Ambient"},cSmoothness:{minValue:0,maxValue:1,name:"Smoothness"},cSmoothnessPower:{minValue:1,maxValue:5,name:"Smoothness Power"},cThickness:{minValue:0,maxValue:1,name:"Thickness"},cThicknessPower:{minValue:1,maxValue:5,name:"Thickness Power"},cCameraTilt:{minValue:0,maxValue:1,name:"CameraTilt",step:.01},cCameraPan:{minValue:0,maxValue:1,name:"CameraPan",step:.01},cSpeed:{minValue:0,maxValue:10,name:"Speed"},cAngle:{minValue:0,maxValue:360,name:"Angle",step:.01},cDensity:{minValue:0,maxValue:1,name:"Density",step:.01},cAlpha:{minValue:0,maxValue:1,name:"Alpha",step:.01},cDiamondGearTeeth:{minValue:8,maxValue:32,name:"Teeth",step:1},cDiamondGearMid:{minValue:0,maxValue:1,name:"Mid",step:.01},cBrushStrokeX1:{minValue:-1,maxValue:1,name:"X1",step:.01},cBrushStrokeY1:{minValue:-1,maxValue:1,name:"Y1",step:.01},cBrushStrokeX2:{minValue:-1,maxValue:1,name:"X2",step:.01},cBrushStrokeY2:{minValue:-1,maxValue:1,name:"Y2",step:.01},cBubblesVariation:{minValue:1,maxValue:2,name:"Variation",step:1},cFlameEyeInnerFade:{minValue:.01,maxValue:1,name:"InnerFade",step:.01},cFlameEyeOuterFade:{minValue:.01,maxValue:1,name:"OuterFade",step:.01},cFlameEyeBorder:{minValue:.01,maxValue:1,name:"Border",step:.01},cSplatLines:{minValue:1,maxValue:100,name:"Lines"},cSplatSpotStep:{minValue:.02,maxValue:.1,name:"Spot Step",step:.02},cTrabeculumVariation:{minValue:0,maxValue:2,name:"Variation",step:1},cLifeTime:{minValue:0,maxValue:1,name:"Life Time",step:.01},cGravity:{minValue:0,maxValue:1,name:"Gravity",step:.01},cCount:{minValue:0,maxValue:500,name:"Count",step:1},cExplosionRadius:{minValue:1,maxValue:2,name:"Radius"},cExplosionDownScale:{minValue:1,maxValue:2,name:"DownScale"},cExplosionGrain:{minValue:1,maxValue:5,name:"Grain"},cExplosionSpeed:{minValue:.1,maxValue:2,name:"Speed"},cExplosionBallness:{minValue:2,maxValue:50,name:"Ballness"},cExplosionGrowth:{minValue:.1,maxValue:3,name:"Growth"},cExplosionFade:{minValue:1,maxValue:5,name:"Fade"},cExplosionDensity:{minValue:.1,maxValue:4,name:"Density"},cExplosionContrast:{minValue:.1,maxValue:4,name:"Contrast"},cExplosionRollingInitDamp:{minValue:.1,maxValue:2,name:"RollingInitDamp"},cExplosionRollingSpeed:{minValue:0,maxValue:4,name:"RollingSpeed"},cExplosionDelayRange:{minValue:.1,maxValue:2,name:"DelayRange"},cExplosionBallSpread:{minValue:.1,maxValue:5,name:"BallSpread"},cNoiseOctave:{minValue:1,maxValue:8,name:"NoiseOctave"},cNoiseFrequency:{minValue:0,maxValue:2,name:"NoiseFrequency",step:.01},cNoisePersistence:{minValue:0,maxValue:1,name:"NoisePersistence"},cNoiseAmplitude:{minValue:0,maxValue:1,name:"NoiseAmplitude",step:.01},cNoiseScale:{minValue:0,maxValue:1,name:"NoiseScale"},cNoiseSphereEnable:{name:"NoiseSphere"},cNoiseGraphEnable:{name:"NoiseGraph"},cNoiseSize:{minValue:.1,maxValue:10,name:"NoiseSize"},cNoiseStrength:{minValue:.1,maxValue:1,name:"NoiseStrength"},cNoiseDepth:{minValue:1,maxValue:5,name:"NoiseDepth"}},t={Circle:{cPowerExponent:{minValue:0,maxValue:50}},Gradation:{cPowerExponent:{minValue:0,maxValue:50}},GradationLine:{cPowerExponent:{minValue:0,maxValue:50}},Cone:{cPowerExponent:{minValue:0,maxValue:50}},Cell:{cPowerExponent:{minValue:0,maxValue:50}},Flame:{cWidth:{minValue:.1,maxValue:2}},Lightning:{cFrequency:{minValue:0,maxValue:2},cWidth:{minValue:1,maxValue:10}},Cloud:{cCameraPan:{minValue:0,maxValue:1,defaultValue:0},cCameraTilt:{minValue:0,maxValue:1,defaultValue:0}},Checker:{cWidth:{minValue:1,maxValue:100},cHeight:{minValue:1,maxValue:100}},FbmNoise2:{cNoiseOctave:{minValue:1,maxValue:3,defaultValue:3},cNoiseAmplitude:{minValue:0,maxValue:.5,defaultValue:.25},cNoiseFrequency:{minValue:0,maxValue:1,defaultValue:1}},FbmNoise3:{cNoiseOctave:{minValue:1,maxValue:8,defaultValue:5},cNoiseAmplitude:{minValue:.5,maxValue:1.5,defaultValue:1},cNoiseFrequency:{minValue:0,maxValue:2,defaultValue:.5},cNoiseScale:{minValue:.01,maxValue:1}},MarbleNoise:{cScale:{minValue:1,maxValue:100},cFrequency:{minValue:1,maxValue:100}},TessNoise:{cNoiseFrequency:{minValue:0,maxValue:1,defaultValue:.1}},FlameEye:{cSpeed:{minValue:.1,maxValue:1}},FlameLance:{cSize:{minValue:1,maxValue:100},cSpeed:{minValue:.1,maxValue:5},cPower:{minValue:.1,maxValue:10},cAngle:{minValue:-1,maxValue:1}},Bonfire:{cSpeed:{minValue:.1,maxValue:1},cIntensity:{minValue:.1,maxValue:5},cStrength:{minValue:.1,maxValue:1},cDensity:{minValue:.1,maxValue:4},cSize:{minValue:0,maxValue:10}},Snow:{cDensity:{minValue:.1,maxValue:6},cRange:{minValue:.1,maxValue:1}},DiamondGear:{cWidth:{minValue:.1,maxValue:8}},BrushStroke:{cWidth:{minValue:0,maxValue:1,defaultValue:.3},cAlpha:{minValue:0,maxValue:1,defaultValue:.58},cStrength:{minValue:.1,maxValue:1,defaultValue:.6},cAngle:{minValue:0,maxValue:1},cAmplitude:{minValue:0,maxValue:1}},Speckle:{cRadius:{minValue:.01,maxValue:1,defaultValue:1},cDensity:{minValue:.01,maxValue:1,defaultValue:.1},cScale:{minValue:.01,maxValue:1,defaultValue:.01}},Pentagon:{cWidth:{minValue:.01,maxValue:1,defaultValue:.02},cScale:{minValue:.01,maxValue:1,defaultValue:.5},cAlpha:{minValue:.01,maxValue:1,defaultValue:.38}},Grunge:{cRadius:{minValue:.01,maxValue:1}},Energy:{cPower:{minValue:0,maxValue:1},cFrequency:{minValue:0,maxValue:1}},Particle:{cSize:{minValue:.01,maxValue:.5}},Electric:{cFrequency:{minValue:10,maxValue:50},cScale:{minValue:.01,maxValue:1}},Caustics:{cScale:{minValue:1,maxValue:10},cSpeed:{minValue:1,maxValue:4}},Squiggles:{cSize:{minValue:1,maxValue:8},cScale:{minValue:.01,maxValue:1,defaultValue:.5},cDensity:{minValue:1,maxValue:16}},WaterTurbulence:{cSize:{minValue:.01,maxValue:1,defaultValue:.4},cIntensity:{minValue:.01,maxValue:1,defaultValue:.15}},Trabeculum:{cDensity:{minValue:0,maxValue:1,defaultValue:1},cScale:{minValue:.01,maxValue:1,defaultValue:1},cCameraPan:{minValue:0,maxValue:1,defaultValue:.5},cCameraTilt:{minValue:0,maxValue:1,defaultValue:.5}}},i={Wood:["cFrequency","cPowerExponent"],Circle:["cRadius","cPowerExponent"],Solar:["cIntensity","cPowerExponent"],Spark:["cIntensity","cPowerExponent"],Ring:["cRadius","cWidth","cPowerExponent"],Gradation:["cDirectionX","cDirectionY","cPowerExponent"],GradationLine:["cDirectionX","cDirectionY","cOffset","cPowerExponent"],Flash:["cFrequency","cPowerExponent"],Cone:["cDirectionX","cDirectionY","cPowerExponent"],Flower:["cPetals","cRadius","cIntensity","cPowerExponent"],FlowerFun:["cPetals","cRadius","cOffset","cIntensity","cPowerExponent"],WaveRing:["cRadius","cWidth","cFrequency","cAmplitude","cPowerExponent"],Flame:["cIntensity","cWidth","cScale"],FlameEye:["cSpeed","cFlameEyeInnerFade","cFlameEyeOuterFade","cFlameEyeBorder","cColor"],Cell:["cIntensity","cPowerExponent","cSize"],Smoke:["cVolume","cBeta","cDelta"],Lightning:["cIntensity","cFrequency","cWidth"],Flare:["cIntensity","cPowerExponent"],Flare2:["cIntensity","cPowerExponent"],Flare3:["cIntensity","cPowerExponent"],MagicCircle:[],Mandara:["cRadius","cInnerRadius","cInnerRadius2"],Cross:["cIntensity","cPowerExponent"],Explosion:["cCameraTilt","cCameraPan","cExplosionRadius","cExplosionDownScale","cExplosionGrain","cExplosionSpeed","cExplosionBallness","cExplosionGrowth","cExplosionFade","cExplosionDensity","cExplosionContrast","cExplosionRollingInitDamp","cExplosionRollingSpeed","cExplosionDelayRange","cExplosionBallSpread"],Explosion2:["cCameraPan","cExplosionSpeed","cExplosionDensity","cEmission","cBloom","cColor"],Corona:["cIntensity","cRadius","cSize"],Fire:["cIntensity","cStrength","cPower","cRange","cWidth","cColor"],LensFlare:["cRadius","cRange","cColor","cPowerExponent"],Sun:["cRadius","cColor"],Laser:["cWidth","cColor"],Laser2:["cWidth","cInnerWidth"],Light:["cRadius","cPowerExponent","cColor"],Cloud:["cWidth","cHeight","cDepth","cIntensity","cLightX","cLightY","cLightZ","cAmbient","cSmoothness","cSmoothnessPower","cThickness","cThicknessPower","cCameraTilt","cCameraPan"],Cloud2:["cIntensity","cDensity","cThickness","cColor"],PerlinNoise:["cNoiseOctave","cNoisePersistence","cNoiseSphereEnable","cNoiseGraphEnable"],SeemlessNoise:["cNoiseOctave","cNoisePersistence","cNoiseScale","cNoiseSphereEnable","cNoiseGraphEnable"],BooleanNoise:["cNoiseFrequency","cNoiseSphereEnable","cNoiseGraphEnable"],CellNoise:["cNoiseFrequency","cNoiseSphereEnable","cNoiseGraphEnable"],RandomNoise:["cNoiseFrequency","cNoiseSphereEnable","cNoiseGraphEnable"],FbmNoise:["cNoiseOctave","cNoiseAmplitude","cNoiseFrequency","cNoiseSphereEnable","cNoiseGraphEnable"],FbmNoise2:["cNoiseOctave","cNoiseAmplitude","cNoiseFrequency","cScale","cNoiseSphereEnable","cNoiseGraphEnable"],FbmNoise3:["cNoiseOctave","cNoiseAmplitude","cNoiseFrequency","cNoiseScale","cOffset","cNoiseSphereEnable","cNoiseGraphEnable"],TurbulentNoise:["cNoiseOctave","cNoiseAmplitude","cNoiseFrequency","cNoiseSphereEnable","cNoiseGraphEnable"],SparkNoise:["cNoiseFrequency","cNoiseSphereEnable","cNoiseGraphEnable"],VoronoiNoise:["cNoiseFrequency","cNoiseSphereEnable","cNoiseGraphEnable"],MarbleNoise:["cScale","cFrequency","cNoiseSphereEnable","cNoiseGraphEnable"],TessNoise:["cNoiseFrequency","cOffset","cNoiseSphereEnable","cNoiseGraphEnable"],GradientNoise:["cNoiseScale","cColor","cNoiseSphereEnable","cNoiseGraphEnable"],Checker:["cWidth","cHeight"],FlameLance:["cSize","cSpeed","cPower","cAngle","cColor","cNoiseSize","cNoiseStrength","cNoiseDepth"],Bonfire:["cSpeed","cIntensity","cStrength","cDensity","cSize","cColor"],Snow:["cSpeed","cScale","cDensity","cRange"],DiamondGear:["cScale","cWidth","cRadius","cDiamondGearTeeth","cDiamondGearMid"],BrushStroke:["cWidth","cStrength","cAlpha","cAngle","cAmplitude","cBrushStrokeX1","cBrushStrokeY1","cBrushStrokeX2","cBrushStrokeY2","cColor"],Speckle:["cRadius","cScale","cDensity"],Bubbles:["cRadius","cWidth","cThickness","cColor","cBubblesVariation"],Pentagon:["cScale","cAlpha","cWidth"],Grunge:["cRadius","cScale"],Energy:["cPower","cDensity","cThickness","cScale","cFrequency","cColor"],InkSplat:["cSplatLines","cSplatSpotStep"],Particle:["cSize","cLifeTime","cGravity","cCount"],Electric:["cFrequency","cScale"],Caustics:["cScale","cSpeed","cColor"],Squiggles:["cSize","cScale","cDensity"],WaterTurbulence:["cScale","cIntensity"],Trabeculum:["cDensity","cScale","cIntensity","cTrabeculumVariation","cCameraTilt","cCameraPan","cColor"],BinaryMatrix:[],Test:[]}[this.effectController.type];for(let e=0;e<i.length;e++){let n=a[i[e]];if(i[e].indexOf("Enable")>=0)this.gui.parsItems.push(this.gui.pars.add(this.effectController,i[e]).name(n.name));else{let a=!1;if(this.effectController.type in t&&i[e]in t[this.effectController.type]&&(a=!0),a){let s=t[this.effectController.type][i[e]];"defaultValue"in s&&(this.effectController[i[e]]=s.defaultValue);let l=this.gui.pars.add(this.effectController,i[e],s.minValue,s.maxValue).name(n.name);"step"in n&&l.step(n.step),"step"in s&&l.step(a.step),this.gui.parsItems.push(l)}else{let a=this.gui.pars.add(this.effectController,i[e],n.minValue,n.maxValue).name(n.name);"step"in n&&a.step(n.step),this.gui.parsItems.push(a)}}}},updateSaveBuffer(){this.saveCanvas.width=this.canvas.width,this.saveCanvas.height=this.canvas.height;const e=this.saveCanvas.getContext("2d",{willReadFrequently:!0});if(this.alphaOptions.blur>0){this.blur50.width=.5*this.canvas.width,this.blur50.height=.5*this.canvas.height,this.blur25.width=.25*this.canvas.width,this.blur25.height=.25*this.canvas.height;let a=this.blur50,t=this.blur25,i=a.getContext("2d"),n=t.getContext("2d");n.drawImage(this.canvas,0,0,this.canvas.width,this.canvas.height,0,0,t.width,t.height),i.drawImage(t,0,0,t.width,t.height,0,0,a.width,a.height);for(let e=0;e<this.alphaOptions.blur;e++)n.drawImage(a,0,0,a.width,a.height,0,0,t.width,t.height),i.drawImage(t,0,0,t.width,t.height,0,0,a.width,a.height),[a,t,i,n]=[t,a,n,i];e.drawImage(a,0,0,a.width,a.height,0,0,this.canvas.width,this.canvas.height)}else e.drawImage(this.canvas,0,0);const a=Math.round(255*this.alphaOptions.threshold),t=Math.round(255*this.alphaOptions.tolerance),i=e.getImageData(0,0,this.canvas.width,this.canvas.height);let n=i.data;for(let e=0;e<n.length;e+=4){const i=n[e+0]>t?255:n[e+0]<a?0:n[e+0],s=n[e+1]>t?255:n[e+1]<a?0:n[e+1],l=n[e+2]>t?255:n[e+2]<a?0:n[e+2],r=Math.round(Math.max(i,s,l));n[e+3]=r}i.data.set(n),e.putImageData(i,0,0)},updateAlphaBuffer(){this.updateSaveBuffer(),this.alphaCanvas.width=this.canvas.width,this.alphaCanvas.height=this.canvas.height;const e=this.alphaCanvas.getContext("2d",{willReadFrequently:!0});e.drawImage(this.saveCanvas,0,0);const a=e.getImageData(0,0,this.canvas.width,this.canvas.height),t=a.data;for(let e=0;e<t.length;e+=4)t[e+0]=t[e+1]=t[e+2]=t[e+3],t[e+3]=255;a.data.set(t),e.putImageData(a,0,0)},animate(){this.effectController.animate&&(this.effectController.time+=this.clock.getDelta());const e=this.effectController.time;let a=e.toString()+"0000000";0===e&&(a="0.00000000"),document.getElementById("time").innerHTML=a.slice(0,8),requestAnimationFrame(this.animate.bind(this)),this.render(),this.alphaOptions.visible&&(this.effectController.animate||this.alphaOptions.update)&&this.updateAlphaBuffer()},render(){this.stats.update();for(let t=0;t<this.layers.length;t++){let i=this.layers[t],n=i.renderTarget,s=i.tDiffuse;"NormalMap"===i.name&&!1===this.effectController.normalMap&&(i=this.layers[this.layers.length-1]),"PolarConversion"===i.name&&!1===this.effectController.polarConversion&&(i=this.layers[this.layers.length-1]),"Tiling"===i.name&&!1===this.effectController.tiling&&(i=this.layers[this.layers.length-1]),i.uniforms.resolution.value=new e.Vector2(this.canvas.width,this.canvas.height),this.camera.getWorldPosition(i.uniforms.cameraPos.value),this.camera.getWorldDirection(i.uniforms.cameraDir.value),i.uniforms.mouse.value.copy(this.mouse),i.uniforms.tDiffuse.value=s;const l=Object.keys(this.effectController);for(let e in l){const t=l[e];"resolution"!==t&&a.FxgenShaderUtils.SetShaderParameter(i.uniforms,t,this.effectController[t])}a.FxgenShaderUtils.SetShaderParameter(i.uniforms,"cColorBalanceShadows",new e.Vector3(this.effectController.cColorBalanceShadowsR,this.effectController.cColorBalanceShadowsG,this.effectController.cColorBalanceShadowsB)),a.FxgenShaderUtils.SetShaderParameter(i.uniforms,"cColorBalanceMidtones",new e.Vector3(this.effectController.cColorBalanceMidtonesR,this.effectController.cColorBalanceMidtonesG,this.effectController.cColorBalanceMidtonesB)),a.FxgenShaderUtils.SetShaderParameter(i.uniforms,"cColorBalanceHighlights",new e.Vector3(this.effectController.cColorBalanceHighlightsR,this.effectController.cColorBalanceHighlightsG,this.effectController.cColorBalanceHighlightsB)),a.FxgenShaderUtils.SetShaderParameter(i.uniforms,"cDirection",new e.Vector2(this.effectController.cDirectionX,this.effectController.cDirectionY)),a.FxgenShaderUtils.SetShaderParameter(i.uniforms,"tGrunge",this.grungeTexture),this.scene.overrideMaterial=i.material,this.renderer.setRenderTarget(n),this.renderer.render(this.scene,this.dummyCamera),this.renderer.setRenderTarget(null),this.scene.overrideMaterial=null}this.effectController.cNoiseSphereEnable&&(this.noise.uniforms.tDisplacement.value=this.layers[this.layers.length-2].renderTarget.texture,this.renderer.render(this.noise.scene,this.camera))}},o=document.createElement("a");function c(){if(console.log("[fxgen] onWindowResize"),r.renderer.setSize(r.canvas.width,r.canvas.height),r.layers)for(let a=0;a<r.layers.length;a++)r.layers[a].renderTarget&&(r.layers[a].renderTarget=new e.WebGLRenderTarget(r.canvas.width,r.canvas.height,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,stencilBuffer:!1})),r.layers[a].tDiffuse&&(r.layers[a].tDiffuse=r.layers[a-1].renderTarget.texture),"Tiling"===r.layers[a].name&&(r.layers[a].tDiffuse.wrapS=r.layers[a].tDiffuse.wrapT=e.RepeatWrapping);r.spriteSheet.renderTarget=new e.WebGLRenderTarget(r.canvas.width,r.canvas.height,{minFilter:e.LinearFilter,magFilter:e.LinearFilter,stencilBuffer:!1}),r.render()}o.style.display="none",document.body.appendChild(o),r.init(),r.animate(),window.addEventListener("resize",c,!1),console.log("[fxgen] ready");
